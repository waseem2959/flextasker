name: Flextasker CI/CD

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      # Setup test database
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: flextasker_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd server && npm ci
      
      - name: Setup database
        working-directory: ./server
        run: |
          npx prisma generate
          npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/flextasker_test
      
      - name: Run frontend tests
        run: npm test
      
      - name: Run backend tests
        working-directory: ./server
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/flextasker_test
          JWT_SECRET: test-jwt-secret
          NODE_ENV: test
  
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd server && npm ci
      
      - name: Lint frontend
        run: npm run lint
      
      - name: Lint backend
        working-directory: ./server
        run: npm run lint
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development')
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd server && npm ci
      
      - name: Build frontend
        run: npm run build
      
      - name: Build backend
        working-directory: ./server
        run: npm run build
      
      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: build/
      
      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: server/dist/
  
  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/development'
    environment:
      name: development
      url: https://dev.flextasker.com
    
    steps:
      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: build
      
      - name: Download backend build
        uses: actions/download-artifact@v3
        with:
          name: backend-build
          path: server/dist
      
      - name: Deploy to development server
        run: echo "Deploying to development environment"
        # Replace with actual deployment commands
        # Example: aws s3 sync build/ s3://dev-flextasker-frontend/
  
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://flextasker.com
    
    steps:
      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: build
      
      - name: Download backend build
        uses: actions/download-artifact@v3
        with:
          name: backend-build
          path: server/dist
      
      - name: Deploy to production server
        run: echo "Deploying to production environment"
        # Replace with actual deployment commands
        # Example: aws s3 sync build/ s3://flextasker-frontend/
